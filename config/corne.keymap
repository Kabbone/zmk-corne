/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
 };
&sk {
    quick-release;
    release-after-ms = <2000>;
 };

 /* Layers */
 #define ALPH 0
 #define SYM 1
 #define NUM 2
 #define SYS 3
 #define BT 4
 #define GAME 5
 #define ALPH2 6
 / { 

    combos {
        compatible = "zmk,combos";

        combo_layer0 {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&to ALPH>;
        };

        combo_btlayer {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&to BT>;
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            //flavor = "tap-preferred";
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            //flavor = "tap-preferred";
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
        hl: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&sl>, <&kp>;
        };
        sr: shift_layer {
           compatible = "zmk,behavior-hold-tap";
           label = "SHIFT_LAYER";
           #binding-cells = <2>;
           tapping-term-ms = <300>;
           quick_tap_ms = <0>;
           flavor = "tap-preferred";
           bindings = <&kp>, <&to>;
           retro-tap;
        };
        lt: layer_tap {
           compatible = "zmk,behavior-hold-tap";
           tapping-term-ms = <200>;
           flavor = "balanced";
        };
        //shk: shift_key {
        //   compatible = "zmk,behavior-mod-morph";
        //   label = "SHIFT_KEY";
        //   #binding-cells = <2>;
        //   bindings = <&kp>, <&kp>;
        //   mods = <(MOD_LSFT|MOD_RSFT)>;
        //};

    };

        keymap {
                compatible = "zmk,keymap";
                
       	alpha1 {
		bindings = <
		&lt GRAVE ESC &kp Q       &kp W        &kp F      &kp P      &kp B   	&kp J         &kp L        &kp U      &kp Y         &kp SQT         &lt ESC BSLH 
		&kp TAB       &hml LCTRL A &hml LSHIFT R &hml LGUI S &hml LALT T &kp G  &lt EQUAL M   &hmr RALT N   &hmr RGUI E &hmr RSHIFT I  &hmr RCTRL O     &kp SEMI
		&mo num1      &hl NUM Z   &kp X        &kp C      &kp D      &kp V   	&lt QMARK K   &lt COLON H  &kp COMMA  &kp DOT       &lt SLASH SEMI  &kp EQUAL
          		                         &mo SYM    &lt LSHIFT TAB &kp ENTER 	&kp BSPC      &kp SPACE    &lt SYS DEL
		>;
		};

       	sym1 {
		bindings = <
		&trans &kp N1      &kp N2    &kp N3    &kp N4    &kp N5            &kp N6     &kp N7    &kp N8    &kp N9      &kp N0    &trans
		&trans &kp DOLLAR  &kp PLUS  &kp LPAR  &kp RPAR  &kp AT            &kp PIPE   &kp MINUS &kp EQUAL &kp UNDER   &kp STAR  &trans
		&trans &kp EXCL    &kp HASH  &kp LBRC  &kp RBRC  &kp GRAVE         &kp AMPS   &kp LBKT  &kp RBKT  &kp PERCENT &kp CARET &trans
			                              &trans    &trans 	&trans         &kp DEL    &trans  &trans
		>;
		};
		
		num1 {
		bindings = <
		&none &kp F1  &kp F2  &kp F3     &kp F4    &kp F5      &kp F6  &kp F7            &kp F8        &kp F9     &kp F10 &kp F11
		&none &none   &none   &none      &none     &none       &none   &kp C_PLAY_PAUSE  &kp C_PREV    &kp C_NEXT &none   &kp F12
		&none &none   &none   &to ALPH2  &to GAME  &none       &none   &kp C_VOL_UP      &kp C_VOL_DN  &none      &none   &none
					          &trans     &trans    &trans	   &trans  &to BT            &trans
		>;
		};	

        sys {
        bindings = <
		&none  &none      &kp PSCRN    &kp K_APP  &none     &none            &kp PG_UP &kp LC(V) &kp LC(C)  &kp LC(X)  &kp LC(Z) &none
		&none  &kp LCTRL  &kp LSHIFT   &kp LGUI   &kp LALT  &kp CAPS   	     &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &kp DEL   &none
		&none  &none      &none        &none      &none     &kp LG(ENTER)    &kp PG_DN &kp HOME  &kp END    &kp INS    &none     &none
					                   &trans     &trans    &trans  	     &trans    &trans    &trans
        >;
        };
        
        bluetooth {
        bindings = <
		&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none       &none  &none  &none  &none &none
		&none  &none         &none         &none         &none         &none		  &none       &none  &none  &none  &none &none 
		&none  &bt BT_NXT    &bt BT_PRV    &bt BT_SEL 0  &none         &none		  &bt BT_CLR  &none  &none  &none  &none &none 
					                       &none         &none         &to ALPH       &none       &none  &none
        >;
        };
        
        gaming {
        bindings = <
		&lt GRAVE ESC &kp Q   &kp W  &kp E  &kp R  &kp NUM_1     &none     &none  &none  &none  &none &none
		&kp TAB       &kp A   &kp S  &kp D  &kp F  &kp NUM_2	 &none     &none  &none  &none  &none &none 
		&mo num1      &kp Z   &kp X  &kp C  &kp V  &kp NUM_3	 &none     &none  &none  &none  &none &none 
					                 &none  &none  &to ALPH2  	 &to ALPH  &none  &none
        >;
        };

      	alpha2 {
		bindings = <
		&lt GRAVE ESC &kp Q       &kp W      &kp E      &kp R &kp T   		  &kp Y        &kp U        &kp I           &kp O        &kp P     &lt ESC BSLH
		&kp TAB       &hml LCTRL A &hml LSHIFT S &hml LGUI D &hml LALT F &kp G    &hmr RALT H   &hmr RGUI J   &hmr RSHIFT K    &hmr RCTRL L  &kp SEMI  &kp SQT 
		&mo num1      &kp Z       &kp X      &kp C      &kp V &kp B   	      &lt QMARK N  &lt COLON M  &lt MINUS COMMA &lt EXCL DOT &kp SLASH &kp RSHIFT
          		                  &mo SYM    &lt LSHIFT TAB   &kp ENTER 	  &kp BSPC     &kp SPACE    &lt SYS DEL
		>;
		};
        
	};
};
