/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
 };
&lt {
   compatible = "zmk,behavior-hold-tap";
   tapping-term-ms = <200>;
   flavor = "balanced";
};

 /* Layers */
 #define ALPH 0
 #define SYM 1
 #define NUM 2
 #define SYS 3
 #define BT 4
 #define GAME 5
 #define ALPH2 6
 / { 

    combos {
        compatible = "zmk,combos";

        combo_layer0 {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&to ALPH>;
        };

        combo_btlayer {
            timeout-ms = <50>;
            key-positions = <24 35>;
            bindings = <&to BT>;
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            //flavor = "tap-preferred";
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            //flavor = "tap-preferred";
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
        kh: keyhold_morph {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       	alpha1 {
		bindings = <
		&gresc     &kp Q        &kp W         &kp F       &kp P       &kp B   	&kp J         &kp L        &kp U       &kp Y          &kp SQT         &kh ESC BSLH 
		&kp TAB    &hml LCTRL A &hml LSHIFT R &hml LGUI S &hml LALT T &kp G     &kh EQUAL M   &hmr RALT N  &hmr RGUI E &hmr RSHIFT I  &hmr RCTRL O    &kp SEMI
		&mo NUM    &lt NUM Z    &kp X         &kp C       &kp D       &kp V   	&kh QMARK K   &kh COLON H  &kp COMMA   &kp DOT        &kh QMARK SLASH &kp EQUAL
          		                         &mo SYM    &lt LSHIFT TAB &kp ENTER 	&bspc_del     &kp SPACE    &lt SYS DEL
		>;
		};

       	sym1 {
		bindings = <
		&trans &kp N1             &kp N2            &kp N3          &kp N4          &kp N5         &kp N6     &kp N7          &kp N8          &kp N9            &kp N0           &trans
		&trans &hml LCTRL DOLLAR  &hml LSHIFT PLUS  &hml LGUI LPAR  &hml LALT RPAR  &kp AT         &kp PIPE   &hmr RALT MINUS &hmr RGUI EQUAL &hmr RSHIFT UNDER &hmr RCTRL STAR  &trans
		&trans &kp EXCL           &kp HASH          &kp LBRC        &kp RBRC        &kp GRAVE      &kp AMPS   &kp LBKT        &kp RBKT        &kp PERCENT       &kp CARET        &trans
			                                        &trans          &trans       	&trans         &kp DEL    &trans          &trans
		>;
		};
		
		num1 {
		bindings = <
		&none &kp F1  &kp F2  &kp F3     &kp F4    &kp F5      &kp F6  &kp F7            &kp F8        &kp F9     &kp F10 &kp F11
		&none &none   &none   &none      &none     &none       &none   &kp C_PLAY_PAUSE  &kp C_PREV    &kp C_NEXT &none   &kp F12
		&none &none   &none   &to ALPH2  &to GAME  &none       &none   &kp C_VOL_UP      &kp C_VOL_DN  &none      &none   &none
					          &trans     &trans    &trans	   &trans  &to BT            &trans
		>;
		};	

        sys {
        bindings = <
		&none  &none      &kp PSCRN    &kp K_APP  &none     &none            &kp PG_UP &kp LC(V) &kp LC(C)  &kp LC(X)  &kp LC(Z) &none
		&none  &kp LCTRL  &kp LSHIFT   &kp LGUI   &kp LALT  &kp CAPS   	     &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &kp DEL   &none
		&none  &none      &none        &none      &none     &kp LG(ENTER)    &kp PG_DN &kp HOME  &kp END    &kp INS    &none     &none
					                   &trans     &trans    &trans  	     &trans    &trans    &trans
        >;
        };
        
        bluetooth {
        bindings = <
		&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none       &none  &none  &none  &none &none
		&none  &none         &none         &none         &none         &none		  &none       &none  &none  &none  &none &none 
		&none  &bt BT_NXT    &bt BT_PRV    &bt BT_SEL 0  &none         &none		  &bt BT_CLR  &none  &none  &none  &none &none 
					                       &none         &none         &to ALPH       &none       &none  &none
        >;
        };
        
        gaming {
        bindings = <
		&gresc    &kp Q   &kp W  &kp E  &kp R  &kp N1      &none     &none  &none  &none  &none &none
		&kp TAB   &kp A   &kp S  &kp D  &kp F  &kp N2      &none     &none  &none  &none  &none &none 
		&mo NUM   &kp Z   &kp X  &kp C  &kp V  &kp N3      &none     &none  &none  &none  &none &none 
				                 &none  &none  &to ALPH2   &to ALPH  &none  &none
        >;
        };

      	alpha2 {
		bindings = <
		&gresc    &kp Q        &kp W         &kp E           &kp R       &kp T   	  &kp Y        &kp U        &kp I           &kp O         &kp P     &kh ESC BSLH
		&kp TAB   &hml LCTRL A &hml LSHIFT S &hml LGUI D     &hml LALT F &kp G        &hmr RALT H  &hmr RGUI J  &hmr RSHIFT K   &hmr RCTRL L  &kp SEMI  &kp SQT 
		&mo NUM   &kp Z        &kp X         &kp C           &kp V       &kp B   	  &kh QMARK N  &kh COLON M  &kh MINUS COMMA &kh EXCL DOT  &kp SLASH &kp RSHIFT
          		                           &mo SYM       &lt LSHIFT TAB  &kp ENTER    &bspc_del    &kp SPACE    &lt SYS DEL
		>;
		};
        
	};
};
